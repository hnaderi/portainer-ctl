name: Upload Python Package
on:
  pull_request:
    branches: ['**']
  push:
    branches: ['**']
    tags: [v*]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Install package
        run: poetry install
      - name: Linting and Sanity check
        run: |
          poetry run black . --check
          poetry run pctl
  publish:
    needs: [build]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Calculate version
        id: get_version
        run: |
          VERSION=$(git describe --tags | sed "s/^v//")
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"
          echo $VERSION
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            hnaderi/pctl:${{ steps.get_version.outputs.VERSION }}
            ghcr.io/hnaderi/pctl:${{ steps.get_version.outputs.VERSION }}
            hnaderi/pctl:latest
            ghcr.io/hnaderi/pctl:latest
  release:
    needs: [build]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Install package
        run: |
          poetry install
          poetry build
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: "dist/*"
